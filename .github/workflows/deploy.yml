name: Deploy Docker Image to EC2

on:
  push:
    branches:
      - master   # You can replace this with the branch you want to trigger the pipeline on

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # Update with your desired region

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 886436948023.dkr.ecr.ap-south-1.amazonaws.com

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t traffic-detection-app .

      # Step 5: Tag the Docker image with the ECR repository
      - name: Tag Docker image
        run: |
          docker tag traffic-detection-app:latest 886436948023.dkr.ecr.ap-south-1.amazonaws.com/traffic-detection:latest

      # Step 6: Push the Docker image to Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push 886436948023.dkr.ecr.ap-south-1.amazonaws.com/traffic-detection:latest

      # Step 7: Deploy the Docker image on EC2 (this assumes you have Docker installed on EC2)
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_PRIVATE_KEY }} ec2-user@13.200.207.243 << EOF
            docker pull 886436948023.dkr.ecr.ap-south-1.amazonaws.com/traffic-detection:latest
            docker run -d -p 5000:5000 886436948023.dkr.ecr.ap-south-1.amazonaws.com/traffic-detection:latest
          EOF
