name: Deploy to EC2

on:
  push:
    branches:
      - main  # Change to the branch you want to trigger the pipeline

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up SSH agent to use the private key for EC2 access
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}  # Replace with your private key stored in GitHub Secrets

      # Step 3: Configure AWS CLI
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ap-south-1  # Replace with your region

      # Step 4: Deploy to EC2
      - name: Deploy to EC2 instance
        run: |
          # Connect to EC2 and perform deployment
          ssh -o StrictHostKeyChecking=no ec2-user@13.200.207.243 << EOF
            # Login to AWS ECR
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 886436948023.dkr.ecr.ap-south-1.amazonaws.com
            
            # Pull the Docker image from ECR
            docker pull 886436948023.dkr.ecr.ap-south-1.amazonaws.com/traffic-detection:latest

            # Run the Docker container on EC2
            docker run -d -p 8080:8080 886436948023.dkr.ecr.ap-south-1.amazonaws.com/traffic-detection:latest
          EOF

      # Optional: Check the running container logs (for debugging purposes)
      - name: Check Docker container logs
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@13.200.207.243 << EOF
            docker ps
            docker logs $(docker ps -q)
          EOF
